{"version":3,"file":"static/js/525.74c10ab1.chunk.js","mappings":"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","sources":["comment/excel/excel.tsx"],"sourcesContent":["// index.tsx\r\nimport { Button, Table } from \"antd\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport ExcelJS from \"exceljs\";\r\nimport FileSaver from \"file-saver\";\r\nvar dataSource: any[] = [];\r\n\r\nfor (let i = 1; i < 99999; i++) {\r\n  dataSource.push({\r\n    key: i,\r\n    name: `name-${i}`,\r\n    age: 18,\r\n    tag: \"小羽同学\",\r\n    value1: `value1-${i}`,\r\n    value2: `value2-${i}`,\r\n    value3: `value3-${i}`,\r\n  });\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: \"姓名\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n  },\r\n  {\r\n    title: \"年龄\",\r\n    dataIndex: \"age\",\r\n    key: \"age\",\r\n  },\r\n  {\r\n    title: \"标签\",\r\n    dataIndex: \"tag\",\r\n    key: \"tag\",\r\n  },\r\n  {\r\n    title: \"value1\",\r\n    dataIndex: \"value1\",\r\n    key: \"value1\",\r\n  },\r\n  {\r\n    title: \"value2\",\r\n    dataIndex: \"value2\",\r\n    key: \"value2\",\r\n  },\r\n  {\r\n    title: \"value3\",\r\n    dataIndex: \"value3\",\r\n    key: \"value3\",\r\n  },\r\n];\r\nconsole.log(44444);\r\n\r\nexport default function Excel() {\r\n  const Newhistory = useMemo(() => {\r\n    const { content } = history.state.usr;\r\n    return content;\r\n  }, [history]);\r\n  console.log(history);\r\n  \r\n  const Time = () => {\r\n    const [showTime, setShowTime] = useState(Date.now());\r\n    const updateShowTime = () => {\r\n      setShowTime(Date.now());\r\n      requestAnimationFrame(updateShowTime);\r\n    };\r\n    useEffect(() => {\r\n      updateShowTime();\r\n    }, []);\r\n    return (\r\n      <>\r\n        <p>{showTime}</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // 主线程导出Excel\r\n  const mainExportExcel = () => {\r\n    // 创建工作簿\r\n    const workbook = new ExcelJS.Workbook();\r\n    // 添加工作表\r\n    const worksheet = workbook.addWorksheet(\"sheet1\");\r\n\r\n    // 设置表格内容\r\n    const _titleCell = worksheet.getCell(\"A1\");\r\n    _titleCell.value = \"Hello ExcelJS!\";\r\n\r\n    const workBookColumns = columns.map((item) => ({\r\n      header: item.title,\r\n      key: item.key,\r\n      width: 32,\r\n    }));\r\n    worksheet.columns = workBookColumns;\r\n    worksheet.addRows(dataSource);\r\n\r\n    // 导出表格\r\n    workbook.xlsx.writeBuffer().then((buffer) => {\r\n      let _file = new Blob([buffer], {\r\n        type: \"application/octet-stream\",\r\n      });\r\n      FileSaver.saveAs(_file, \"ExcelJS.xlsx\");\r\n    });\r\n  };\r\n  const OnMYYworker = () => {\r\n    console.log(\"1\");\r\n    // const Mk = new MYYworker()\r\n    // const y: any = 'jjjj', k: any = '3333333'\r\n    // Mk.postMessage({ y, k })\r\n    // Mk.onmessage = (e: any) => {\r\n    //     console.log(e, '1111111');\r\n    // }\r\n    // console.log(Mk);\r\n  };\r\n  // 子线程导出Excel\r\n  const workerExportExcel = async () => {\r\n    console.log('====================================');\r\n    console.log('进来了吗');\r\n    console.log('====================================');\r\n    const file: any = await new Promise((resolve) => {\r\n      // const myWorker = new MMworker();\r\n      const myWorker = new Worker(\r\n        new URL(\"./excel.worker.ts\", import.meta.url)\r\n      );\r\n      console.log('====================================');\r\n      console.log(myWorker);\r\n      console.log('====================================');\r\n      myWorker.postMessage({\r\n        columns,\r\n        dataSource,\r\n      });\r\n      myWorker.onmessage = (e: { data: { data: unknown } }) => {\r\n        console.log('====================================');\r\n        console.log(e);\r\n        console.log('====================================');\r\n        resolve(e.data.data); // 关闭worker线程\r\n        myWorker.terminate();\r\n      };\r\n    });\r\n    FileSaver.saveAs(file, \"ExcelJS.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={mainExportExcel}>导出全部</Button>\r\n      <Button onClick={workerExportExcel}>worker导出全部</Button>\r\n      <Button onClick={OnMYYworker}>MYYworker</Button>\r\n      <div>{Newhistory}</div>\r\n      <Time />\r\n      <Table dataSource={dataSource} columns={columns} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["dataSource","i","push","key","name","concat","age","tag","value1","value2","value3","columns","title","dataIndex","Excel","Newhistory","useMemo","history","state","usr","content","console","log","Time","_useState","useState","Date","now","_useState2","_slicedToArray","showTime","setShowTime","updateShowTime","requestAnimationFrame","useEffect","_jsx","_Fragment","children","workerExportExcel","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","wrap","_context","prev","next","Promise","resolve","myWorker","Worker","URL","postMessage","onmessage","e","data","terminate","sent","FileSaver","stop","apply","arguments","_jsxs","Button","onClick","workbook","ExcelJS","worksheet","addWorksheet","getCell","value","workBookColumns","map","item","header","width","addRows","xlsx","writeBuffer","then","buffer","_file","Blob","type","Table"],"sourceRoot":""}